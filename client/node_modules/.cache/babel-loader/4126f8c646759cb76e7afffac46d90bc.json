{"ast":null,"code":"var _jsxFileName = \"/Users/kimlinh/CodePath/Capstone-Project/client/src/components/Signup/Signup.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./Signup.css\";\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useJsApiLoader, GoogleMap, Marker, Autocomplete } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Signup(_ref) {\n  _s();\n\n  let {\n    setSignupMessage,\n    signupMessage\n  } = _ref;\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  /* set up Google Map Places autocomplete */\n\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries: ['places']\n  });\n\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  /* clear messages on mount */\n\n\n  useEffect(() => {\n    setSignupMessage('');\n  }, []);\n\n  const handleOnSubmitSignup = async () => {\n    try {\n      const res = await axios.post('http://localhost:3001/signup', {\n        username: username,\n        password: password\n      });\n      console.log(res);\n      setSignupMessage('Success creating new account');\n      navigate('/login');\n    } catch (e) {\n      setSignupMessage(e.response.data.error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"user\",\n      placeholder: \"Enter username\",\n      onChange: e => setUsername(e.target.value),\n      value: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"password\",\n      placeholder: \"Enter password\",\n      onChange: e => setPassword(e.target.value),\n      value: password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your Location (City/State)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOnSubmitSignup,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), signupMessage !== '' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: signupMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 31\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signup, \"JkEHsVHfbjhHPwNny5SGu7ruTRQ=\", false, function () {\n  return [useNavigate, useJsApiLoader];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useJsApiLoader","GoogleMap","Marker","Autocomplete","axios","Signup","setSignupMessage","signupMessage","username","setUsername","password","setPassword","navigate","isLoaded","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","libraries","handleOnSubmitSignup","res","post","console","log","e","response","data","error","message","target","value"],"sources":["/Users/kimlinh/CodePath/Capstone-Project/client/src/components/Signup/Signup.jsx"],"sourcesContent":["import React from 'react'\nimport \"./Signup.css\"\nimport { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useJsApiLoader, GoogleMap, Marker, Autocomplete } from '@react-google-maps/api'\nimport axios from 'axios'\n\nfunction Signup({\n  setSignupMessage,\n  signupMessage\n}) {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const navigate = useNavigate()\n\n  /* set up Google Map Places autocomplete */\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries: ['places']\n  })\n\n  if (!isLoaded) {\n    return <h1>Loading</h1>\n  }\n\n  /* clear messages on mount */\n  useEffect(() => {\n    setSignupMessage('')\n  },[])\n  \n  const handleOnSubmitSignup = async () => {\n    try {\n      const res = await axios.post('http://localhost:3001/signup',\n      {\n        username: username,\n        password: password\n      })\n      console.log(res)\n      setSignupMessage('Success creating new account')\n      navigate('/login')\n    } catch (e) {\n      setSignupMessage(e.response.data.error.message)\n    }\n  }\n  \n  return (\n    <div className=\"signup\">\n      <h1>Sign Up</h1>\n      <input type=\"text\" name='user' placeholder='Enter username' onChange={(e) => setUsername(e.target.value)} value={username}/>\n      <input type=\"text\" name='password' placeholder='Enter password' onChange={(e) => setPassword(e.target.value)} value={password}/>\n      <Autocomplete>\n        <input type=\"text\" placeholder='Enter your Location (City/State)'/>\n      </Autocomplete>\n      <button onClick={handleOnSubmitSignup}>Sign Up</button>\n      {signupMessage !== '' ? <p>{signupMessage}</p> : null}\n    </div>\n  )\n}\n\nexport default Signup"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,EAAyBC,SAAzB,EAAoCC,MAApC,EAA4CC,YAA5C,QAAgE,wBAAhE;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,MAAT,OAGG;EAAA;;EAAA,IAHa;IACdC,gBADc;IAEdC;EAFc,CAGb;EACD,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAMe,QAAQ,GAAGb,WAAW,EAA5B;EAEA;;EACA,MAAM;IAAEc;EAAF,IAAeb,cAAc,CAAC;IAClCc,gBAAgB,EAAEC,OAAO,CAACC,GAAR,CAAYC,6BADI;IAElCC,SAAS,EAAE,CAAC,QAAD;EAFuB,CAAD,CAAnC;;EAKA,IAAI,CAACL,QAAL,EAAe;IACb,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;EAED;;;EACAf,SAAS,CAAC,MAAM;IACdQ,gBAAgB,CAAC,EAAD,CAAhB;EACD,CAFQ,EAEP,EAFO,CAAT;;EAIA,MAAMa,oBAAoB,GAAG,YAAY;IACvC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAAW,8BAAX,EAClB;QACEb,QAAQ,EAAEA,QADZ;QAEEE,QAAQ,EAAEA;MAFZ,CADkB,CAAlB;MAKAY,OAAO,CAACC,GAAR,CAAYH,GAAZ;MACAd,gBAAgB,CAAC,8BAAD,CAAhB;MACAM,QAAQ,CAAC,QAAD,CAAR;IACD,CATD,CASE,OAAOY,CAAP,EAAU;MACVlB,gBAAgB,CAACkB,CAAC,CAACC,QAAF,CAAWC,IAAX,CAAgBC,KAAhB,CAAsBC,OAAvB,CAAhB;IACD;EACF,CAbD;;EAeA,oBACE;IAAK,SAAS,EAAC,QAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,IAAI,EAAC,MAAZ;MAAmB,IAAI,EAAC,MAAxB;MAA+B,WAAW,EAAC,gBAA3C;MAA4D,QAAQ,EAAGJ,CAAD,IAAOf,WAAW,CAACe,CAAC,CAACK,MAAF,CAASC,KAAV,CAAxF;MAA0G,KAAK,EAAEtB;IAAjH;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAO,IAAI,EAAC,MAAZ;MAAmB,IAAI,EAAC,UAAxB;MAAmC,WAAW,EAAC,gBAA/C;MAAgE,QAAQ,EAAGgB,CAAD,IAAOb,WAAW,CAACa,CAAC,CAACK,MAAF,CAASC,KAAV,CAA5F;MAA8G,KAAK,EAAEpB;IAArH;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,YAAD;MAAA,uBACE;QAAO,IAAI,EAAC,MAAZ;QAAmB,WAAW,EAAC;MAA/B;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAJF,eAOE;MAAQ,OAAO,EAAES,oBAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPF,EAQGZ,aAAa,KAAK,EAAlB,gBAAuB;MAAA,UAAIA;IAAJ;MAAA;MAAA;MAAA;IAAA,QAAvB,GAAgD,IARnD;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GAlDQF,M;UAMUN,W,EAGIC,c;;;KATdK,M;AAoDT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}