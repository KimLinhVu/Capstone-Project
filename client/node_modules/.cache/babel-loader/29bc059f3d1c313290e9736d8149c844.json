{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/kimlinh/CodePath/Capstone-Project/client/src/components/Dashboard/Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { accessToken, logout, getCurrentUserProfile, getCurrentUserPlaylist } from './spotify';\nimport { getPlaylists, addPlaylists } from './playlist';\nimport axios from 'axios';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StyledLoginButton = _styled.a.withConfig({\n  displayName: \"Dashboard__StyledLoginButton\",\n  componentId: \"sc-1pjkxaq-0\"\n})([\"background-color:green;color:white;padding:10px 20px;margin:20px auto;border-radius:30px;display:inline-block;\"]);\n\n_c = StyledLoginButton;\n\nfunction Dashboard(_ref) {\n  _s();\n\n  let {\n    clearToken\n  } = _ref;\n  const [spotifyToken, setSpotifyToken] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [playlist, setPlaylist] = useState(null);\n  const [inPlaylistProfile, setInPlaylistProfile] = useState();\n  const [currentAddPlaylist, setCurrentAddPlaylist] = useState(null);\n  /* get value of tokens out of the URL */\n\n  useEffect(() => {\n    setSpotifyToken(accessToken);\n\n    const fetchUserProfile = async () => {\n      try {\n        const {\n          data\n        } = await getCurrentUserProfile();\n        setProfile(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    const addUserPlaylist = async () => {\n      try {\n        /* get list of playlist from Spotify API */\n        const {\n          data\n        } = await getCurrentUserPlaylist();\n        /* add to mongo database */\n\n        await addPlaylists(data.items);\n        /* retrieve playlist that belongs to user and store in playlist state */\n\n        const result = await getPlaylists();\n        const options = convertToOptionsArray(result.data);\n        setPlaylist(options);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchUserProfile();\n    addUserPlaylist();\n  }, []);\n\n  const convertToOptionsArray = playlist => {\n    const newArray = [];\n\n    for (let i = 0; i < (playlist === null || playlist === void 0 ? void 0 : playlist.length); i++) {\n      newArray.push({\n        key: playlist[i].playlist.id,\n        value: playlist[i],\n        label: playlist[i].playlist.name\n      });\n    }\n\n    return newArray;\n  };\n\n  const handleAddPlaylistOnClick = async () => {\n    /* work on how to update an item in db */\n    try {\n      axios.post('http://localhost:8888/playlist/add', {\n        playlist: currentAddPlaylist\n      }, {\n        headers: {\n          \"x-access-token\": localStorage.getItem('token')\n        }\n      }).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const clearAllTokens = () => {\n    clearToken();\n    logout();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [spotifyToken ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Logged In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), profile && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: profile.display_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [profile.followers.total, \" Followers\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), profile.images.length > 0 ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: profile.images[0].url,\n          alt: \"Profile Picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 42\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), playlist && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n          options: playlist,\n          onChange: e => setCurrentAddPlaylist(e.value),\n          placeholder: \"Select a playlist to add to your profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-playlist\",\n          disabled: currentAddPlaylist === null,\n          onClick: handleAddPlaylistOnClick,\n          children: \"Add Playlist to Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(StyledLoginButton, {\n      className: \"App-link\",\n      href: \"http://localhost:8888/spotify/login\",\n      children: \"Log Into Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logout\",\n      onClick: clearAllTokens,\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), spotifyToken ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logout,\n      children: \"Log Out of Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 23\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"sOC8NsOrwnqivI3KatCrZfCSZk0=\");\n\n_c2 = Dashboard;\nexport default Dashboard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledLoginButton\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","accessToken","logout","getCurrentUserProfile","getCurrentUserPlaylist","getPlaylists","addPlaylists","axios","Dropdown","StyledLoginButton","styled","a","Dashboard","clearToken","spotifyToken","setSpotifyToken","profile","setProfile","playlist","setPlaylist","inPlaylistProfile","setInPlaylistProfile","currentAddPlaylist","setCurrentAddPlaylist","fetchUserProfile","data","error","console","log","addUserPlaylist","items","result","options","convertToOptionsArray","newArray","i","length","push","key","id","value","label","name","handleAddPlaylistOnClick","post","headers","localStorage","getItem","then","res","catch","err","clearAllTokens","display_name","followers","total","images","url","e"],"sources":["/Users/kimlinh/CodePath/Capstone-Project/client/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { accessToken, logout, getCurrentUserProfile, getCurrentUserPlaylist } from './spotify'\nimport { getPlaylists, addPlaylists } from './playlist'\nimport axios from 'axios'\nimport styled from 'styled-components/macro'\nimport Dropdown from 'react-dropdown'\nimport 'react-dropdown/style.css'\n\nconst StyledLoginButton = styled.a`\n  background-color: green;\n  color: white;\n  padding: 10px 20px;\n  margin: 20px auto;\n  border-radius: 30px;\n  display: inline-block;\n`\n\nfunction Dashboard({\n  clearToken\n}) {\n  const [spotifyToken, setSpotifyToken] = useState(null)\n  const [profile, setProfile] = useState(null)\n  const [playlist, setPlaylist] = useState(null)\n  const [inPlaylistProfile, setInPlaylistProfile] = useState()\n  const [currentAddPlaylist, setCurrentAddPlaylist] = useState(null)\n  \n  /* get value of tokens out of the URL */\n  useEffect(() => {\n    setSpotifyToken(accessToken)\n    const fetchUserProfile = async () => {\n      try {\n        const { data } = await getCurrentUserProfile()\n        setProfile(data)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n\n    const addUserPlaylist = async () => {\n      try {\n        /* get list of playlist from Spotify API */\n        const { data } = await getCurrentUserPlaylist()\n        /* add to mongo database */\n        await addPlaylists(data.items)\n        /* retrieve playlist that belongs to user and store in playlist state */\n        const result = await getPlaylists()\n        const options = convertToOptionsArray(result.data)\n        setPlaylist(options)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n\n    fetchUserProfile()\n    addUserPlaylist()\n  }, [])\n\n  const convertToOptionsArray = (playlist) => {\n    const newArray = []\n    for (let i = 0; i < playlist?.length; i++) {\n      newArray.push({key: playlist[i].playlist.id, value: playlist[i], label: playlist[i].playlist.name})\n    }\n    return newArray\n  }\n\n  const handleAddPlaylistOnClick = async () => {\n    /* work on how to update an item in db */\n    try {\n      axios.post('http://localhost:8888/playlist/add', {\n        playlist: currentAddPlaylist\n      }, {\n      headers: {\n        \"x-access-token\": localStorage.getItem('token')\n      }}).then(res => {\n        console.log(res)\n      }).catch(err => {\n        console.log(err)\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const clearAllTokens = () => {\n    clearToken()\n    logout()\n  }\n\n  return (\n    <div className=\"dashboard\">\n      {spotifyToken ? (\n      <>\n        <h1>Logged In</h1>\n        {profile && (\n          <div>\n            <h1>{profile.display_name}</h1>\n            <p>{profile.followers.total} Followers</p>\n            {profile.images.length > 0 ? <img src={profile.images[0].url} alt=\"Profile Picture\"/> : null}\n          </div>\n        )}\n        {playlist && (\n          <div>\n            <Dropdown \n              options={playlist} \n              onChange={(e) => setCurrentAddPlaylist(e.value)}\n              placeholder=\"Select a playlist to add to your profile\"\n            />\n            <button className=\"add-playlist\" disabled={currentAddPlaylist === null} onClick={handleAddPlaylistOnClick}>Add Playlist to Profile</button>\n          </div>\n        )}\n      </>)\n       : <StyledLoginButton className=\"App-link\" href=\"http://localhost:8888/spotify/login\">Log Into Spotify</StyledLoginButton>}\n      <button className=\"logout\" onClick={clearAllTokens}>Log Out</button>\n      {spotifyToken ? <button onClick={logout}>Log Out of Spotify</button> : null}\n    </div>\n  )\n}\n\nexport default Dashboard"],"mappings":"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"},"metadata":{},"sourceType":"module"}